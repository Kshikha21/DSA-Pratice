package queueCollection;

import java.util.LinkedList;
import java.util.Queue;

public class StackUsing2Queue<T> {
	private Queue q1;
	private Queue q2;
	// private int size;


	public StackUsing2Queue() {
		//Implement the Constructor
		q1=new LinkedList();
		q2=new LinkedList();
		//   size=0;
	}



	/*----------------- Public Functions of Stack -----------------*/


	public int getSize() { 
		return q1.size();

	}

	public boolean isEmpty() {

		return getSize()==0;

	}

	public void push(int element) {
		  while(!q1.isEmpty()) {
			  q2.add(q1.peek());
			 
		  }
		  q1.add(element);
		  while(!q2.isEmpty()) {
			  q1.add(q1.peek());
		  }
      
	}

	public int pop() {
		if(q1.size()==0) {
			return -1;
		}
	 int element=(int)q1.peek();
	 return element;

	}

	public int top() {
		if(getSize()>0) {
			return (int)q1.peek();
		}
		
		return -1;

	}
}
